name: Send one scheduled email

permissions:
  contents: write

on:
  schedule:
    # 24 runs/day at random minutes in IST (converted to UTC)
    - cron: '10 19 * * *'
    - cron: '37 19 * * *'
    - cron: '31 20 * * *'
    - cron: '17 22 * * *'
    - cron: '47 22 * * *'
    - cron: '45 23 * * *'
    - cron: '44 0 * * *'
    - cron: '38 1 * * *'
    - cron: '17 3 * * *'
    - cron: '36 3 * * *'
    - cron: '13 5 * * *'
    - cron: '17 6 * * *'
    - cron: '27 7 * * *'
    - cron: '4 8 * * *'
    - cron: '35 8 * * *'
    - cron: '7 10 * * *'
    - cron: '57 10 * * *'
    - cron: '32 11 * * *'
    - cron: '31 12 * * *'
    - cron: '35 13 * * *'
    - cron: '43 14 * * *'
    - cron: '44 15 * * *'
    - cron: '2 17 * * *'
    - cron: '8 18 * * *'
  workflow_dispatch: {}  # manual trigger for testing

jobs:
  send-email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run one email send
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          FROM_NAME: ${{ secrets.FROM_NAME }}
        run: |
          python send_one.py

      - name: Commit and push updated CSV
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add leads.csv
          if ! git diff --cached --quiet; then
            git commit -m "Update leads.csv after send ($GITHUB_RUN_ID)" || true
            git push origin HEAD:${{ github.ref }}
          else
            echo "No changes to commit."
          fi
